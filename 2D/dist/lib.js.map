{"version":3,"sources":["arc.ts","demo.ts"],"names":["Arc","Arc.constructor","Arc.draw","Arc.centerX","Arc.centerY","Arc.radius","Arc.startAngle","Arc.endAngle","Arc.rotation","Arc.color","Arc.alpha","Demo","Demo.constructor","Demo.draw","Demo.startAnimation","Demo.assignEvents","Demo.adjustForRetina","Demo.getDevicePixelRatio","Demo.getRandomColor","Demo.degreesToRadiants","Demo.createPieParts","Demo.toggleAnimation","Demo.handleTouchMoveEvent","Demo.handleMouseMove","Demo.stopAnimation","Demo.getOffset"],"mappings":"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","file":"lib.js","sourcesContent":["class Arc {\n    private _context: CanvasRenderingContext2D;\n\n    constructor(context: CanvasRenderingContext2D) {\n        this._context = context;\n    }\n    \n    public draw(): void {\n        // TODO: Code me!\n    }  \n\n    private _centerX: number;\n    public get centerX(): number {\n        return this._centerX;\n    }\n    public set centerX(v: number) {\n        this._centerX = v;\n    }\n    \n    private _centerY : number;\n    public get centerY() : number {\n        return this._centerY;\n    }\n    public set centerY(v : number) {\n        this._centerY = v;\n    }\n    \n    private _radius : number;\n    public get radius() : number {\n        return this._radius;\n    }\n    public set radius(v : number) {\n        this._radius = v;\n    }\n    \n    private _startAngle : number;\n    public get startAngle() : number {\n        return this._startAngle;\n    }\n    public set startAngle(v : number) {\n        this._startAngle = v;\n    }\n    \n    private _endAngle : number;\n    public get endAngle() : number {\n        return this._endAngle;\n    }\n    public set endAngle(v : number) {\n        this._endAngle = v;\n    }\n    \n    private _rotation : number = 0;\n    public get rotation() : number {\n        return this._rotation;\n    }\n    public set rotation(v : number) {\n        this._rotation = v;\n    }\n    \n    private _color: Array<number>;\n    public get color() : Array<number> {\n        return this._color;\n    }\n    public set color(v : Array<number>) {\n        this._color = v;\n    }\n    \n    private _alpha : number = 1;\n    public get alpha() : number {\n        return this._alpha;\n    }\n    public set alpha(v : number) {\n        this._alpha = v;\n    }  \n}","/// <reference path=\"../typings/tsd.d.ts\" />\n/// <reference path=\"arc.ts\" />\n\nclass Demo {\n    /**\n     * The canvas where the chart will be drawn to\n     */\n    private _canvas: HTMLCanvasElement;\n    \n    /**\n     * The 2D context of the canvas\n     */\n    private _context: CanvasRenderingContext2D;\n    \n    /**\n     * Width in pixel without devicePixelRatio scaling of the canvas\n     */\n    private _width: number;\n    \n    /**\n     * Height in pixel without devicePixelRatio scaling of the canvas\n     */\n    private _height: number;\n\n    /**\n     * Array of all the pie parts\n     */\n    private _pieParts: Array<Arc> = new Array<Arc>();\n    \n    /**\n     * Will hold the current animation frame is the animation is running\n     */\n    private _animationFrame: number;\n\n    constructor(canvas: HTMLCanvasElement, values: Array<number>) {\n        // Assign parameters of the constructor to the private variables\n        this._canvas = canvas;\n        this._context = <CanvasRenderingContext2D> canvas.getContext('2d');\n\n        this._width = canvas.width;\n        this._height = canvas.height;\n\n        this.adjustForRetina();\n        this.createPieParts(values);\n        //this.assignEvents();\n    }\n    \n    /**\n     * Draws the chart :)\n     */    \n    public draw(): void {\n        var c: CanvasRenderingContext2D = this._context;\n\n        // TODO: Code me!\n    }\n    \n    /**\n     * Starts the animation sequence\n     */    \n    private startAnimation(): void {\n        var that = this;\n        \n        // TODO: Code me!\n    }\n    \n    /**\n     * Assigns mouse and touch events to the canvas\n     */\n    private assignEvents(): void {\n        var that = this;\n\n        // TODO: Code me!\n    }\n    \n    /**\n     * Adjusts the canvas and the context for retina scaling (if devicePixelRatio > 1)\n     */\n    private adjustForRetina(): void {\n        var factor: number;\n        \n        if ((factor = this.getDevicePixelRatio()) > 1) {\n            this._canvas.width = this._width * factor;\n            this._canvas.height = this._height * factor;\n\n            this._canvas.style.width = this._width + 'px';\n            this._canvas.style.height = this._height + 'px';\n\n            this._context.scale(factor, factor);\n        }\n    }\n    \n    /**\n     * Returns the devicePixelRatio or 1 \n     */    \n    private getDevicePixelRatio(): number {\n        return window.devicePixelRatio || 1;\n    }\n    \n    /**\n     * Returns a random color\n     */\n    private getRandomColor(): Array<number> {\n        return [Math.floor(Math.random() * 255), Math.floor(Math.random() * 255), Math.floor(Math.random() * 255)];\n    }\n    \n    /**\n     * Calculates radiants from degrees\n     */\n    private degreesToRadiants(degrees: number): number {\n        return (degrees * Math.PI) / 180;\n    }\n    \n    /**\n     * Creates the pie parts from the values\n     */\n    private createPieParts(values: Array<number>): void {\n        var centerX: number = this._width / 2;\n        var centerY: number = this._height / 2;\n        var radius: number = this._width / 2 - 50;\n        var rotationDeg: number = 0;\n\n        values.forEach(value => {\n            var arc = new Arc(this._context);\n\n            arc.color = this.getRandomColor();\n            arc.centerX = centerX;\n            arc.centerY = centerY;\n            arc.radius = radius;\n            arc.startAngle = this.degreesToRadiants(rotationDeg);\n            arc.endAngle = arc.startAngle + this.degreesToRadiants(value * 3.6);\n            rotationDeg += value * 3.6;\n\n            this._pieParts.push(arc);\n        });\n    }\n\n    /**\n     * Toggles the animation\n     */\n    private toggleAnimation(): void {\n        if (this._animationFrame) {\n            return this.stopAnimation();\n        }\n\n        this.startAnimation();\n    }\n\n    /**\n     * Handles touch move. Will move the pie chart\n     */\n    private handleTouchMoveEvent(e: TouchEvent): void {\n        var that = this;\n        \n        // .touches is an array containing one or more touch points for multi-touch scenarios\n        var position = this.getOffset(e.touches[0]);\n\n        this._pieParts.forEach(part => {\n            part.centerX = position.x;\n            part.centerY = position.y;\n        });\n        \n        window.requestAnimationFrame(() => {\n            that.draw();\n        });\n    }\n\n    /**\n     * Handles mouse move. Will simulate a \"hover effect\"\n     */\n    private handleMouseMove(x: number, y: number): void {\n        var that = this;\n        var factor = this.getDevicePixelRatio();\n        var color = this._context.getImageData(x * factor, y * factor, 1, 1).data;\n\n        this._pieParts.forEach(part => {\n            if (part.color[0] === color[0] || part.color[0] === color[0] - 1 || part.color[0] === color[0] + 1) {\n                part.alpha = 0.5;\n            }\n            else {\n                part.alpha = 1;\n            }\n        });\n\n        window.requestAnimationFrame(() => {\n            that.draw();\n        });\n    }\n\n    /**\n     * Stops the animation sequence \n     */    \n    private stopAnimation(): void {\n        window.cancelAnimationFrame(this._animationFrame);\n        this._animationFrame = undefined;\n    }\n    \n    /**\n     * Returns the correct positions of an event (mouse/touch)\n     * \n     * See: http://stackoverflow.com/a/10816667/959687\n     */\n    private getOffset(event: any): any {\n        var el = event.target,\n            x = 0,\n            y = 0;\n\n        while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n            x += el.offsetLeft - el.scrollLeft;\n            y += el.offsetTop - el.scrollTop;\n            el = el.offsetParent;\n        }\n\n        x = event.clientX - x;\n        y = event.clientY - y;\n\n        return { x: x, y: y };\n    }\n}"],"sourceRoot":"/source/"}