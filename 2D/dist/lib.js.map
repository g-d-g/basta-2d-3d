{"version":3,"sources":["example1.ts","example2.ts","example3.ts","example4.ts","example5.ts"],"names":["Example1","Example1.constructor","Example1.draw","Example2","Example2.constructor","Example2.initializeCircleProperties","Example2.draw","Example3","Example3.constructor","Example3.initializeCircleProperties","Example3.adjustForRetina","Example3.draw","Example4","Example4.constructor","Example4.initializeCircleProperties","Example4.adjustForRetina","Example4.draw","Example4.bounceCircle","Example4.start","Example5","Example5.constructor","Example5.initializeCircleProperties","Example5.adjustForRetina","Example5.draw","Example5.bounceCircle","Example5.start"],"mappings":"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","file":"lib.js","sourcesContent":["/**\n * Example for drawing a simple circle\n */\nclass Example1 {\n    private _canvas: HTMLCanvasElement;\n    private _context: CanvasRenderingContext2D;\n    \n    constructor(canvas: HTMLCanvasElement) {\n        if (!canvas) {\n            throw 'No canvas!';\n        }\n        \n        this._canvas = canvas;\n        this._context = <CanvasRenderingContext2D> canvas.getContext('2d');\n    }    \n    \n    public draw() {\n        // Begin a new path (a new drawing stack)\n        this._context.beginPath();\n        \n        // Draw the circle\n        // Center point is 50,50\n        // Radius 50\n        // Start from angle 0\n        // End at angle 2 * Math.Pi (full circle)\n        this._context.arc(50, 50, 50, 0, 2 * Math.PI);\n        \n        // Fill the circle with default settings (black)\n        this._context.fill();\n    }\n}","/**\n * As Example 1, with gradient filling\n */\nclass Example2 {\n    private _canvas: HTMLCanvasElement;\n    private _context: CanvasRenderingContext2D;\n    \n    private _circleX: number;\n    private _circleY: number;\n    private _circleRadius: number;\n\n    constructor(canvas: HTMLCanvasElement) {\n        if (!canvas) {\n            throw 'No canvas!';\n        }\n\n        this._canvas = canvas;\n        this._context = <CanvasRenderingContext2D> canvas.getContext('2d');\n        \n        this.initializeCircleProperties();\n    }\n    \n    private initializeCircleProperties(): void {\n        // Points where the circle will be, so the gradient can be adjusted as well\n        this._circleX = 50;\n        this._circleY = 150;\n        this._circleRadius = 50;\n    }\n\n    public draw() {\n        // Save the canvas context, so we can set our own values\n        this._context.save();\n        \n        // Create a linear gradient from black to white\n        var gradient = this._context.createLinearGradient(this._circleX - this._circleRadius, this._circleY - this._circleRadius,\n            this._circleX - this._circleRadius, this._circleY + this._circleRadius);\n        gradient.addColorStop(0, '#000000');\n        gradient.addColorStop(1, '#FFFFFF');\n        \n        // Begin a new path (a new drawing stack)\n        this._context.beginPath();\n        \n        // Draw the circle\n        // Start from angle 0\n        // End at angle 2 * Math.Pi (full circle)\n        this._context.arc(this._circleX, this._circleY, this._circleRadius, 0, 2 * Math.PI);\n        \n        // assign the gradient and fill the circle with it\n        this._context.fillStyle = gradient;\n        this._context.fill();\n\n        this._context.restore();\n    }\n}","/**\n * As Example 2, with retina scaling\n */\nclass Example3 {\n    private _canvas: HTMLCanvasElement;\n    private _context: CanvasRenderingContext2D;\n    private _width: number;\n    private _height: number;\n\n    private _circleX: number;\n    private _circleY: number;\n    private _circleRadius: number;\n\n    constructor(canvas: HTMLCanvasElement) {\n        if (!canvas) {\n            throw 'No canvas!';\n        }\n\n        this._canvas = canvas;\n        this._width = canvas.width;\n        this._height = canvas.height;\n        this._context = <CanvasRenderingContext2D> canvas.getContext('2d');\n\n        this.adjustForRetina();\n        this.initializeCircleProperties();\n    }\n\n    private initializeCircleProperties(): void {\n        // Points where the circle will be, so the gradient can be adjusted as well\n        this._circleX = 50;\n        this._circleY = 150;\n        this._circleRadius = 50;\n    }\n\n    private adjustForRetina(): void {\n        // Is the devicePixelRatio available? If yes, we use it for scaling the canvas.\n        // Scaling is only needed, if the ratio is > 1\n        if (!window.devicePixelRatio || window.devicePixelRatio <= 1) {\n            return;\n        }\n\n        var scaleFactor = window.devicePixelRatio;\n        \n        // Set the CSS width and height to the original values\n        this._canvas.style.width = this._width + 'px';\n        this._canvas.style.height = this._height + 'px';\n        \n        // Set the canvas width and height scaled by the device pixel ratio\n        this._canvas.width = this._width * scaleFactor;\n        this._canvas.height = this._height * scaleFactor;\n\n        this._context.scale(scaleFactor, scaleFactor);\n    }\n\n    public draw() {\n        // Save the canvas context, so we can set our own values\n        this._context.save();\n        \n        // Create a linear gradient from black to white\n        var gradient = this._context.createLinearGradient(this._circleX - this._circleRadius, this._circleY - this._circleRadius,\n            this._circleX - this._circleRadius, this._circleY + this._circleRadius);\n        gradient.addColorStop(0, '#000000');\n        gradient.addColorStop(1, '#FFFFFF');\n        \n        // Begin a new path (a new drawing stack)\n        this._context.beginPath();\n        \n        // Draw the circle\n        // Start from angle 0\n        // End at angle 2 * Math.Pi (full circle)\n        this._context.arc(this._circleX, this._circleY, this._circleRadius, 0, 2 * Math.PI);\n        \n        // assign the gradient and fill the circle with it\n        this._context.fillStyle = gradient;\n        this._context.fill();\n\n        this._context.restore();\n    }\n}","/**\n * As Example 3, with animation\n */\nclass Example4 {\n    private _canvas: HTMLCanvasElement;\n    private _context: CanvasRenderingContext2D;\n    private _width: number;\n    private _height: number;\n\n    private _circleX: number;\n    private _circleY: number;\n    private _circleRadius: number;\n    private _moveX: number = 10;\n    private _moveY: number = 10;\n\n    constructor(canvas: HTMLCanvasElement) {\n        if (!canvas) {\n            throw 'No canvas!';\n        }\n\n        this._canvas = canvas;\n        this._width = canvas.width;\n        this._height = canvas.height;\n        this._context = <CanvasRenderingContext2D> canvas.getContext('2d');\n\n        this.adjustForRetina();\n        this.initializeCircleProperties();\n    }\n\n    private initializeCircleProperties(): void {\n        // Points where the circle will be, so the gradient can be adjusted as well\n        this._circleX = 50;\n        this._circleY = 150;\n        this._circleRadius = 50;\n    }\n\n    private adjustForRetina(): void {\n        // Is the devicePixelRatio available? If yes, we use it for scaling the canvas.\n        // Scaling is only needed, if the ratio is > 1\n        if (!window.devicePixelRatio || window.devicePixelRatio <= 1) {\n            return;\n        }\n\n        var scaleFactor = window.devicePixelRatio;\n        \n        // Set the CSS width and height to the original values\n        this._canvas.style.width = this._width + 'px';\n        this._canvas.style.height = this._height + 'px';\n        \n        // Set the canvas width and height scaled by the device pixel ratio\n        this._canvas.width = this._width * scaleFactor;\n        this._canvas.height = this._height * scaleFactor;\n        \n        // Scale the drawing context\n        this._context.scale(scaleFactor, scaleFactor);\n    }\n\n    public draw() {\n        // Save the canvas context, so we can set our own values\n        this._context.save();\n        \n        // Create a linear gradient from black to white\n        var gradient = this._context.createLinearGradient(this._circleX - this._circleRadius, this._circleY - this._circleRadius,\n            this._circleX - this._circleRadius, this._circleY + this._circleRadius);\n        gradient.addColorStop(0, '#000000');\n        gradient.addColorStop(1, '#FFFFFF');\n        \n        // Begin a new path (a new drawing stack)\n        this._context.beginPath();\n        \n        // Draw the circle\n        // Start from angle 0\n        // End at angle 2 * Math.Pi (full circle)\n        this._context.arc(this._circleX, this._circleY, this._circleRadius, 0, 2 * Math.PI);\n        \n        // assign the gradient and fill the circle with it\n        this._context.fillStyle = gradient;\n        this._context.fill();\n\n        this._context.restore();\n    }\n    \n    private bounceCircle(): void {\n        \n        // Will the next move hit our boundaries? If yes, revert the direction\n        if (this._circleX + this._circleRadius > this._width || this._circleX - this._circleRadius < 0) {\n            this._moveX *= -1;\n        }\n        \n        if (this._circleY + this._circleRadius > this._height || this._circleY - this._circleRadius < 0) {\n            this._moveY *= -1;\n        }\n        \n        // Move the ball\n        this._circleX += this._moveX;\n        this._circleY += this._moveY;\n    }\n\n    public start(): void {\n        // Save the reference, so we can use it inside the animation frame\n        var that = this;\n        \n        var animationFrame = function() {\n            // Clear the area at first\n            // The easy version is to the clear complete context by\n            // that._context.clearRect(0, 0, that._width, that._height);\n            // For demonstration we clear only the circle itself\n            that._context.clearRect(that._circleX - that._circleRadius, that._circleY - that._circleRadius,\n                that._circleRadius * 2, that._circleRadius * 2);\n            \n            // Calculate the new position\n            that.bounceCircle();\n            \n            that.draw();\n\n            // Request another frame\n            // We have an infinite loop now\n            window.requestAnimationFrame(animationFrame);\n        }\n\n        // Initial call to request a single animation frame        \n        window.requestAnimationFrame(animationFrame);\n    }\n}","/**\n * As Example 4, with time-based animation\n */\nclass Example5 {\n    private _canvas: HTMLCanvasElement;\n    private _context: CanvasRenderingContext2D;\n    private _width: number;\n    private _height: number;\n\n    private _circleX: number;\n    private _circleY: number;\n    private _circleRadius: number;\n    private _moveX: number = 10;\n    private _moveY: number = 10;\n\n    constructor(canvas: HTMLCanvasElement) {\n        if (!canvas) {\n            throw 'No canvas!';\n        }\n\n        this._canvas = canvas;\n        this._width = canvas.width;\n        this._height = canvas.height;\n        this._context = <CanvasRenderingContext2D> canvas.getContext('2d');\n\n        this.adjustForRetina();\n        this.initializeCircleProperties();\n    }\n\n    private initializeCircleProperties(): void {\n        // Points where the circle will be, so the gradient can be adjusted as well\n        this._circleX = 50;\n        this._circleY = 150;\n        this._circleRadius = 50;\n    }\n\n    private adjustForRetina(): void {\n        // Is the devicePixelRatio available? If yes, we use it for scaling the canvas.\n        // Scaling is only needed, if the ratio is > 1\n        if (!window.devicePixelRatio || window.devicePixelRatio <= 1) {\n            return;\n        }\n\n        var scaleFactor = window.devicePixelRatio;\n        \n        // Set the CSS width and height to the original values\n        this._canvas.style.width = this._width + 'px';\n        this._canvas.style.height = this._height + 'px';\n        \n        // Set the canvas width and height scaled by the device pixel ratio\n        this._canvas.width = this._width * scaleFactor;\n        this._canvas.height = this._height * scaleFactor;\n        \n        // Scale the drawing context\n        this._context.scale(scaleFactor, scaleFactor);\n    }\n\n    public draw() {\n        // Save the canvas context, so we can set our own values\n        this._context.save();\n        \n        // Create a linear gradient from black to white\n        var gradient = this._context.createLinearGradient(this._circleX - this._circleRadius, this._circleY - this._circleRadius,\n            this._circleX - this._circleRadius, this._circleY + this._circleRadius);\n        gradient.addColorStop(0, '#000000');\n        gradient.addColorStop(1, '#FFFFFF');\n        \n        // Begin a new path (a new drawing stack)\n        this._context.beginPath();\n        \n        // Draw the circle\n        // Start from angle 0\n        // End at angle 2 * Math.Pi (full circle)\n        this._context.arc(this._circleX, this._circleY, this._circleRadius, 0, 2 * Math.PI);\n        \n        // assign the gradient and fill the circle with it\n        this._context.fillStyle = gradient;\n        this._context.fill();\n\n        this._context.restore();\n    }\n    \n    private bounceCircle(): void {\n        \n        // Will the next move hit our boundaries? If yes, revert the direction\n        if (this._circleX + this._circleRadius > this._width || this._circleX - this._circleRadius < 0) {\n            this._moveX *= -1;\n        }\n        \n        if (this._circleY + this._circleRadius > this._height || this._circleY - this._circleRadius < 0) {\n            this._moveY *= -1;\n        }\n        \n        // Move the ball\n        this._circleX += this._moveX;\n        this._circleY += this._moveY;\n    }\n\n    public start(): void {\n        // Save the reference, so we can use it inside the animation frame\n        var that = this;\n        \n        var animationFrame = function() {\n            // Clear the area at first\n            // The easy version is to the clear complete context by\n            // that._context.clearRect(0, 0, that._width, that._height);\n            // For demonstration we clear only the circle itself\n            that._context.clearRect(that._circleX - that._circleRadius, that._circleY - that._circleRadius,\n                that._circleRadius * 2, that._circleRadius * 2);\n            \n            // Calculate the new position\n            that.bounceCircle();\n            \n            that.draw();\n\n            // Request another frame\n            // We have an infinite loop now\n            window.requestAnimationFrame(animationFrame);\n        }\n\n        // Initial call to request a single animation frame        \n        window.requestAnimationFrame(animationFrame);\n    }\n}"],"sourceRoot":"/source/"}